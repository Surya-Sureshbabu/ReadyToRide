package com.example.user.readytorides;


import android.app.DatePickerDialog;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.Toast;

import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

public class Registration_PersonalInfo extends AppCompatActivity {
    EditText name,dob,aadhar,identification;
    RadioGroup gender_group;
    Button save,cancel;
    Spinner b_group;
    Helper helper;
    Calendar myCalendar;
    RequestHandler req;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_registration__personal_info);
        helper=new Helper(this);
        req=new RequestHandler();
        myCalendar= Calendar.getInstance();
        name=(EditText)findViewById(R.id.editName);
        dob=(EditText)findViewById(R.id.editDate);
        aadhar=(EditText)findViewById(R.id.editAadhar);
        identification=(EditText)findViewById(R.id.editIdentification);
        gender_group=(RadioGroup)findViewById(R.id.radio_group);
        save=(Button)findViewById(R.id.btn_save);
        cancel=(Button)findViewById(R.id.btn_cancel);
        b_group=(Spinner)findViewById(R.id.spinner);
        final DatePickerDialog.OnDateSetListener date = new DatePickerDialog.OnDateSetListener() {

            @Override
            public void onDateSet(DatePicker view, int year, int monthOfYear,
                                  int dayOfMonth) {
                // TODO Auto-generated method stub
                myCalendar.set(Calendar.YEAR, year);
                myCalendar.set(Calendar.MONTH, monthOfYear);
                myCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);

                updateLabel();
            }

        };
        dob.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                new DatePickerDialog(Registration_PersonalInfo.this, date, myCalendar
                        .get(Calendar.YEAR), myCalendar.get(Calendar.MONTH),
                        myCalendar.get(Calendar.DAY_OF_MONTH)).show();
            }
        });
        cancel.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                finishActivity(0);
                System.exit(0);
            }
        });
        save.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if(!name.getText().toString().isEmpty()) {
                    if(!dob.getText().toString().isEmpty()) {
                        if(!aadhar.getText().toString().isEmpty()) {
                            if(helper.isValidAadharNumber(aadhar.getText().toString()))
                            {
                                if(!identification.getText().toString().isEmpty()) {
                                    if(isAllowedToRegister()) {
                                        checkAccountExists(aadhar.getText().toString());
                                    }

                                }
                                else
                                {
                                    identification.setError("Enter your identification mark");
                                    identification.requestFocus();

                                }
                            }
                            else
                            {
                                aadhar.setError("Enter a valid aadharNumber");
                                aadhar.requestFocus();
                            }
                        }
                        else
                        {
                            aadhar.setError("Enter aadhar Number");
                            aadhar.requestFocus();
                        }
                    }
                    else
                    {
                        dob.setError("Enter your Date of birth");
                        dob.requestFocus();
                    }
                }
                else
                {
                    name.setError("Enter your name");
                    name.requestFocus();
                }
            }
        });
    }
    void checkAccountExists(final String aadhar_num)
    {
        class AccountCheck extends AsyncTask<String,Void,String>
        {
            ProgressDialog dialog;
            String jsonData;
            String url_s="https://readytoride.000webhostapp.com/ReadyToRide/AccountCheck.php";

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                dialog=ProgressDialog.show(Registration_PersonalInfo.this,"Wait..","Verifying aadhar number",true,true);

            }

            @Override
            protected String doInBackground(String... params) {
                try {
                    URL url = new URL(url_s);
                    req.trustEveryone();
                    HttpURLConnection con = (HttpURLConnection) url.openConnection();
                    con.setRequestMethod("POST");
                    con.setDoOutput(true);
                    OutputStream outstream = con.getOutputStream();
                    String data =
                            URLEncoder.encode("aadhar", "UTF-8") + "=" + URLEncoder.encode(aadhar_num, "UTF-8");


                    BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outstream, "UTF-8"));
                    bufferedWriter.write(data);
                    bufferedWriter.flush();
                    int statusCode = con.getResponseCode();
                    if(statusCode==HttpURLConnection.HTTP_OK)
                    {
                        BufferedReader reader = new BufferedReader(new InputStreamReader(con.getInputStream()));
                        StringBuilder sb = new StringBuilder();
                        String line;

                        while ((line = reader.readLine()) != null)
                            sb.append(line).append("\n");

                        //text = sb.toString();
                        bufferedWriter.close();
                        jsonData= sb.toString();
                    }
                    else
                    {
                        jsonData="{"+"result"+":"+"failed"+"}";
                    }


                } catch (MalformedURLException e) {
                    e.printStackTrace();
                    jsonData=e.getMessage();
                } catch (IOException e) {
                    e.printStackTrace();
                    jsonData=e.getMessage();
                }
                return  jsonData;
            }

            @Override
            protected void onPostExecute(String result) {
                super.onPostExecute(result);
                dialog.dismiss();


                if(result.trim().equals("success"))
                {
                    //res="success";

                    // helper.displayAlert("Number Successfully added", AlterOtp.this);
                    int radio_id = gender_group.getCheckedRadioButtonId();
                    RadioButton rd_gender = (RadioButton) findViewById(radio_id);
                    Intent i = new Intent(Registration_PersonalInfo.this, Registration_Second.class);
                    i.putExtra(helper.name, name.getText().toString());
                    i.putExtra(helper.gender, rd_gender.getText().toString());
                    i.putExtra(helper.dob, dob.getText().toString());
                    i.putExtra(helper.aadhar, aadhar.getText().toString());
                    i.putExtra(helper.blood_group, b_group.getSelectedItem().toString());
                    i.putExtra(helper.identification, identification.getText().toString());
                    startActivity(i);
                }
                else if(result.trim().equals("failed"))
                {
                    helper.showMessageDialog("Aadhar number already exists");
                    // res="failed";
                }



            }

        }
        // Toast.makeText(Registration_PersonalInfo.this,"Started",Toast.LENGTH_LONG).show();
        AccountCheck acc=new AccountCheck();
        acc.execute(aadhar_num);
        // return res;
    }

    private void updateLabel() {
        String myFormat = "MM/dd/yy"; //In which you need put here
        SimpleDateFormat sdf = new SimpleDateFormat(myFormat, Locale.US);

        dob.setText(sdf.format(myCalendar.getTime()));
        isAllowedToRegister();
    }
    boolean isAllowedToRegister()
    {
        Date dt=new Date(dob.getText().toString());
        Calendar cal=Calendar.getInstance();
        cal.setTime(dt);
        Calendar cr=Calendar.getInstance();
        int diff=cr.get(Calendar.YEAR)-cal.get(Calendar.YEAR);
        if(diff<18)
        {
            helper.showMessageDialog("You are not allowed to register,Age must be 18 or higher");
            return  false;
        }
        else
        {
            return true;
        }
    }
}
